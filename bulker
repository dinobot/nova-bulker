#!/bin/bash 

#debug=true
debug=false
hostmask=$1
action=$2

#check for debug enabled

if $debug; then
	echo 'DEBUUUUUG'
	echo 'mask is' $hostmask ', action is' $action
	echo $#
fi

#check for CSV sourced

if ! [ $OS_USERNAME ]; then 
	echo 'source your project CSV first!'
	exit 1
fi

#help || run nova

if ! [ "$#" == "2" ]
	then
			echo '
		about:
			multer calls nova for each hosts matching host_mask in output of $(nova list) and makes on them specified action
		usage:
			multer hosts_mask action
				to run action for hosts
				OR
			multer (s || searh) regex
				to list hosts matched regex
				OR
			multer (w || watch) (a || all || name of node)
				to watch for instances on given node
			multer (t || tenant) instance_id

		multer always expects for two arguments. '	
			exit 1

	elif [ "$1" == "s" ] || [ "$1" == "search" ]
		then nova list --all-tenants 1 | grep $2

	elif [ "$1" == "w" ] || [ "$1" == "watch" ]
		then if [ "$2" == "a" ] || [ "$2" == "all" ]
			then watch -n0.1 "nova list --all-tenants 1"
			else watch -n0.1 "nova list --all-tenants 1 --host '$2'"
		fi
	elif [ "$1" == "t" ] || [ "$1" == "tenant" ]
		then keystone tenant-list | grep $(nova show $2 | grep tenant_id | tr '|' ' ' | awk '{print $2}') | awk '{print $4}'

	else
		for host in `nova list | grep $hostmask | awk '{print $2}'`
		do
			echo 'nova' $action $host
			nova $action $host
		done
fi
